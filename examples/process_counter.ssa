module @process_counter
  
function @counter_loop(@count: int) -> int {
    @start:
    receive { atom increment: @do_increment, atom get: @do_get, atom stop: @do_stop }
  
    @do_increment:
    @new_count = add @count 1
    tail_call @counter_loop(@new_count)
  
    @do_get:
    tail_call @counter_loop(@count)
  
    @do_stop:
    ret @count
}
  
export function @start_counter() -> int {
    @start:
    @initial = const 0
    @pid = spawn @counter_loop(@initial)
    ret @pid
}
  
export function @main() -> int {
    @start:
    @pid = call @start_counter()
    @inc_msg = const atom increment
    send @pid @inc_msg
    send @pid @inc_msg
    @stop_msg = const atom stop
    send @pid @stop_msg
    ret 0
}
